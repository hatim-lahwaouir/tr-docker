services:
  backend:
    image: backend
    container_name: backend
    build: ./requirements/backend
    expose:
      - 8000
    networks:
      - netw
    env_file:
      - .env
    volumes:
      - media:/app/backend/media


  frontend:
    image: frontend
    container_name: frontend
    build: ./requirements/frontend
    expose:
      - 5173
    networks:
      - netw

  nginx:
    build: ./requirements/nginx
    container_name: nginx
    ports:
      - 5000:80
    volumes:
      - media:/home/app/web/staticfiles
    depends_on:
      - backend
      - frontend
    networks:
      - netw
  
  db:
    container_name: db
    image: postgres:15.8-alpine3.20
    environment:
      - POSTGRES_USER=hello_django
      - POSTGRES_PASSWORD=hello_django
      - POSTGRES_DB=hello_django_prod
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    networks:
      - netw

  prometheus:
    build: ./requirements/prometheus
    container_name: prometheus
    ports:
      - "9090:9090"
    networks:
      - netw



  nginx-exporter:
    image: nginx/nginx-prometheus-exporter:1.3
    container_name: nginx_exporter
    ports:
      - "9113:9113"
    networks:
      - netw
    depends_on:
      - nginx
    command:
      - '-nginx.scrape-uri=http://nginx/stub_status'


  postgres_exporter:
    image: quay.io/prometheuscommunity/postgres-exporter
    container_name: postgres_exporter
    environment:
      - "DATA_SOURCE_URI=db:5432/postgres?sslmode=disable"
      - "DATA_SOURCE_USER=${POSTGRES_USER}"
      - "DATA_SOURCE_PASS=${POSTGRES_PASSWORD}"
    env_file:
      - .env
    ports:
      - "9187"
    networks:
      - netw
    depends_on:
      - db
  
  grafana:
    build: ./requirements/grafana
    container_name: grafana
    environment:
      - "GF_SECURITY_ADMIN_PASSWORD=admin"
      - "GF_USERS_ALLOW_SIGN_UP=false"
    ports:
      - '3000:3000'
    networks:
      - netw
    restart: unless-stopped

volumes:
  media:
  postgres_data:
networks:
  netw:
